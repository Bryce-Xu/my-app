{"version":3,"sources":["blog-post.1.md","blog-post.2.md","blog-post.3.md","Markdown.js","Blog.js","serviceWorker.js","index.js"],"names":["module","exports","options","overrides","h1","component","Typography","props","gutterBottom","variant","h2","h3","h4","paragraph","p","a","Link","li","withStyles","theme","listItem","marginTop","spacing","classes","className","Markdown","Copyright","color","align","href","Date","getFullYear","useStyles","makeStyles","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","flexShrink","mainFeaturedPost","position","backgroundColor","grey","common","white","marginBottom","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","mainFeaturedPostContent","breakpoints","up","paddingRight","mainGrid","card","display","cardDetails","cardMedia","width","markdown","typography","body2","sidebarAboutBox","sidebarSection","footer","background","paper","sections","featuredPosts","title","date","description","posts","post1","post2","post3","archives","social","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","CssBaseline","Container","maxWidth","Toolbar","Button","size","noWrap","IconButton","map","section","key","Paper","style","src","alt","Grid","container","item","md","cardGrid","post","xs","CardActionArea","Card","CardContent","Hidden","xsDown","CardMedia","image","Divider","substring","elevation","archive","network","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69514637.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blog-post.1.86abbc67.md\";","module.exports = __webpack_public_path__ + \"static/media/blog-post.2.ae95781c.md\";","module.exports = __webpack_public_path__ + \"static/media/blog-post.3.cb1cc828.md\";","import React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst styles = theme => ({\n  listItem: {\n    marginTop: theme.spacing(1),\n  },\n});\n\nconst options = {\n  overrides: {\n    h1: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h4',\n      },\n    },\n    h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\n    h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\n    h4: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'caption', paragraph: true },\n    },\n    p: { component: Typography, props: { paragraph: true } },\n    a: { component: Link },\n    li: {\n      component: withStyles(styles)(({ classes, ...props }) => (\n        <li className={classes.listItem}>\n          <Typography component=\"span\" {...props} />\n        </li>\n      )),\n    },\n  },\n};\n\nexport default function Markdown(props) {\n  return <ReactMarkdown options={options} {...props} />;\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Hidden from '@material-ui/core/Hidden';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport Markdown from './Markdown';\nimport post1 from './blog-post.1.md';\nimport post2 from './blog-post.2.md';\nimport post3 from './blog-post.3.md';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n  mainFeaturedPost: {\n    position: 'relative',\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundImage: 'url(https://source.unsplash.com/user/erondu)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: 'rgba(0,0,0,.3)',\n  },\n  mainFeaturedPostContent: {\n    position: 'relative',\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(6),\n      paddingRight: 0,\n    },\n  },\n  mainGrid: {\n    marginTop: theme.spacing(3),\n  },\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n  markdown: {\n    ...theme.typography.body2,\n    padding: theme.spacing(3, 0),\n  },\n  sidebarAboutBox: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.grey[200],\n  },\n  sidebarSection: {\n    marginTop: theme.spacing(3),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nconst sections = [\n  'Technology',\n  'Design',\n  'Culture',\n  'Business',\n  'Politics',\n  'Opinion',\n  'Science',\n  'Health',\n  'Style',\n  'Travel',\n];\n\nconst featuredPosts = [\n  {\n    title: 'Featured post',\n    date: 'Nov 12',\n    description:\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\n  },\n  {\n    title: 'Post title',\n    date: 'Nov 11',\n    description:\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\n  },\n];\n\nconst posts = [post1, post2, post3];\n\nconst archives = [\n  'March 2020',\n  'February 2020',\n  'January 2020',\n  'December 2019',\n  'November 2019',\n  'October 2019',\n  'September 2019',\n  'August 2019',\n  'July 2019',\n  'June 2019',\n  'May 2019',\n  'April 2019',\n];\n\nconst social = ['GitHub', 'Twitter', 'Facebook'];\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Toolbar className={classes.toolbar}>\n          <Button size=\"small\">Subscribe</Button>\n          <Typography\n            component=\"h2\"\n            variant=\"h5\"\n            color=\"inherit\"\n            align=\"center\"\n            noWrap\n            className={classes.toolbarTitle}\n          >\n            Blog\n          </Typography>\n          <IconButton>\n            <SearchIcon />\n          </IconButton>\n          <Button variant=\"outlined\" size=\"small\">\n            Sign up\n          </Button>\n        </Toolbar>\n        <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\n          {sections.map(section => (\n            <Link\n              color=\"inherit\"\n              noWrap\n              key={section}\n              variant=\"body2\"\n              href=\"#\"\n              className={classes.toolbarLink}\n            >\n              {section}\n            </Link>\n          ))}\n        </Toolbar>\n        <main>\n          {/* Main featured post */}\n          <Paper className={classes.mainFeaturedPost}>\n            {/* Increase the priority of the hero background image */}\n            {\n              <img\n                style={{ display: 'none' }}\n                src=\"https://source.unsplash.com/user/erondu\"\n                alt=\"background\"\n              />\n            }\n            <div className={classes.overlay} />\n            <Grid container>\n              <Grid item md={6}>\n                <div className={classes.mainFeaturedPostContent}>\n                  <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n                    Title of a longer featured blog post\n                  </Typography>\n                  <Typography variant=\"h5\" color=\"inherit\" paragraph>\n                    Multiple lines of text that form the lede, informing new readers quickly and\n                    efficiently about what&apos;s most interesting in this post&apos;s contents.\n                  </Typography>\n                  <Link variant=\"subtitle1\" href=\"#\">\n                    Continue readingâ¦\n                  </Link>\n                </div>\n              </Grid>\n            </Grid>\n          </Paper>\n          {/* End main featured post */}\n          {/* Sub featured posts */}\n          <Grid container spacing={4} className={classes.cardGrid}>\n            {featuredPosts.map(post => (\n              <Grid item key={post.title} xs={12} md={6}>\n                <CardActionArea component=\"a\" href=\"#\">\n                  <Card className={classes.card}>\n                    <div className={classes.cardDetails}>\n                      <CardContent>\n                        <Typography component=\"h2\" variant=\"h5\">\n                          {post.title}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                          {post.date}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" paragraph>\n                          {post.description}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"primary\">\n                          Continue reading...\n                        </Typography>\n                      </CardContent>\n                    </div>\n                    <Hidden xsDown>\n                      <CardMedia\n                        className={classes.cardMedia}\n                        image=\"https://source.unsplash.com/random\"\n                        title=\"Image title\"\n                      />\n                    </Hidden>\n                  </Card>\n                </CardActionArea>\n              </Grid>\n            ))}\n          </Grid>\n          {/* End sub featured posts */}\n          <Grid container spacing={5} className={classes.mainGrid}>\n            {/* Main content */}\n            <Grid item xs={12} md={8}>\n              <Typography variant=\"h6\" gutterBottom>\n                From the Firehose\n              </Typography>\n              <Divider />\n              {posts.map(post => (\n                <Markdown className={classes.markdown} key={post.substring(0, 40)}>\n                  {post}\n                </Markdown>\n              ))}\n            </Grid>\n            {/* End main content */}\n            {/* Sidebar */}\n            <Grid item xs={12} md={4}>\n              <Paper elevation={0} className={classes.sidebarAboutBox}>\n                <Typography variant=\"h6\" gutterBottom>\n                  About\n                </Typography>\n                <Typography>\n                  Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit\n                  amet fermentum. Aenean lacinia bibendum nulla sed consectetur.\n                </Typography>\n              </Paper>\n              <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n                Archives\n              </Typography>\n              {archives.map(archive => (\n                <Link display=\"block\" variant=\"body1\" href=\"#\" key={archive}>\n                  {archive}\n                </Link>\n              ))}\n              <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n                Social\n              </Typography>\n              {social.map(network => (\n                <Link display=\"block\" variant=\"body1\" href=\"#\" key={network}>\n                  {network}\n                </Link>\n              ))}\n            </Grid>\n            {/* End sidebar */}\n          </Grid>\n        </main>\n      </Container>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Container maxWidth=\"lg\">\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            Footer\n          </Typography>\n          <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n            Something here to give the footer a purpose!\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport Blog from './Blog';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Blog />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}